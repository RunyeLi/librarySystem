{
	"name": "check user permission",
	"properties": {
		"content": {
			"query": "SELECT\n        [UserType]=princ.[type],\n        [DatabaseUserName] = princ.[name],\n        [Role]= NULL,\n        [PermissionType]   = perm.[permission_name],\n        [PermissionState]  = perm.[state_desc],\n        [ObjectType] = CASE perm.[class]\n                           WHEN 1 THEN obj.[type_desc]        -- Schema-contained objects\n                           ELSE perm.[class_desc]             -- Higher-level objects\n\n                       END,\n\n        [Schema] = objschem.[name],\n\n        [ObjectName] = CASE perm.[class]\n\n                           WHEN 3 THEN permschem.[name]       -- Schemas\n\n                           WHEN 4 THEN imp.[name]             -- Impersonations\n\n                           ELSE OBJECT_NAME(perm.[major_id])  -- General objects\n\n                       END,\n\n        [ColumnName] = col.[name]\n\n    FROM\n\n        --Database user\n\n        sys.database_principals            AS princ\n\n        --Permissions\n\n        LEFT JOIN sys.database_permissions AS perm      ON perm.[grantee_principal_id] = princ.[principal_id]\n\n        LEFT JOIN sys.schemas              AS permschem ON permschem.[schema_id] = perm.[major_id]\n\n        LEFT JOIN sys.objects              AS obj       ON obj.[object_id] = perm.[major_id]\n\n        LEFT JOIN sys.schemas              AS objschem  ON objschem.[schema_id] = obj.[schema_id]\n\n        --Table columns\n\n        LEFT JOIN sys.columns              AS col       ON col.[object_id] = perm.[major_id]\n\n                                                           AND col.[column_id] = perm.[minor_id]\n\n        --Impersonations\n\n        LEFT JOIN sys.database_principals  AS imp       ON imp.[principal_id] = perm.[major_id]\n\n    WHERE\n\n        princ.[type] IN ('E','S')\n\n        -- No need for these system accounts\n\n        AND princ.[name] NOT IN ('sys', 'INFORMATION_SCHEMA')\n\n \n\nUNION\n--2) List all access provisioned to a SQL user or Windows user/group through a database or application role\n\n    SELECT\n\n        [UserType] = membprinc.[type],\n\n        [DatabaseUserName] = membprinc.[name],\n\n        [Role]             = roleprinc.[name],\n\n        [PermissionType]   = perm.[permission_name],\n\n        [PermissionState]  = perm.[state_desc],\n\n        [ObjectType] = CASE perm.[class]\n\n                           WHEN 1 THEN obj.[type_desc]        -- Schema-contained objects\n\n                           ELSE perm.[class_desc]             -- Higher-level objects\n\n                       END,\n\n        [Schema] = objschem.[name],\n\n        [ObjectName] = CASE perm.[class]\n\n                           WHEN 3 THEN permschem.[name]       -- Schemas\n\n                           WHEN 4 THEN imp.[name]             -- Impersonations\n\n                           ELSE OBJECT_NAME(perm.[major_id])  -- General objects\n\n                       END,\n\n        [ColumnName] = col.[name]\n\n    FROM\n\n        --Role/member associations\n\n        sys.database_role_members          AS members\n\n        --Roles\n\n        JOIN      sys.database_principals  AS roleprinc ON roleprinc.[principal_id] = members.[role_principal_id]\n\n        --Role members (database users)\n\n        JOIN      sys.database_principals  AS membprinc ON membprinc.[principal_id] = members.[member_principal_id]\n\n        --Permissions\n\n        LEFT JOIN sys.database_permissions AS perm      ON perm.[grantee_principal_id] = roleprinc.[principal_id]\n\n        LEFT JOIN sys.schemas              AS permschem ON permschem.[schema_id] = perm.[major_id]\n\n        LEFT JOIN sys.objects              AS obj       ON obj.[object_id] = perm.[major_id]\n\n        LEFT JOIN sys.schemas              AS objschem  ON objschem.[schema_id] = obj.[schema_id]\n\n        --Table columns\n\n        LEFT JOIN sys.columns              AS col       ON col.[object_id] = perm.[major_id]\n\n                                                           AND col.[column_id] = perm.[minor_id]\n\n        --Impersonations\n\n        LEFT JOIN sys.database_principals  AS imp       ON imp.[principal_id] = perm.[major_id]\n\n    WHERE\n\n        membprinc.[type] IN ('E','S')\n\n        -- No need for these system accounts\n\n        AND membprinc.[name] NOT IN ('sys', 'INFORMATION_SCHEMA')\n\n \n\nUNION\n--3) List all access provisioned to the public role, which everyone gets by default\nSELECT\n[UserType]='{All Users}',\n[DatabaseUserName] = '{All Users}',\n[Role] = roleprinc.[name],\n[PermissionType] = perm.[permission_name],\n[PermissionState] = perm.[state_desc],\n[ObjectType] = CASE perm.[class]\nWHEN 1 THEN obj.[type_desc]-- Schema-contained objects\nELSE perm.[class_desc]-- Higher-level objects\nEND,\n[Schema] = objschem.[name],\n[ObjectName] = CASE perm.[class]\nWHEN 3 THEN permschem.[name] -- Schemas\nWHEN 4 THEN imp.[name]-- Impersonations\nELSE OBJECT_NAME(perm.[major_id]) -- General objects\nEND,\n[ColumnName] = col.[name]\n FROM\n--Roles\nsys.database_principals AS roleprinc\n--Role permissions\nLEFT JOIN sys.database_permissions AS perm ON perm.[grantee_principal_id] = roleprinc.[principal_id]\nLEFT JOIN sys.schemas AS permschem ON permschem.[schema_id] = perm.[major_id]\n--All objects\nJOIN sys.objects AS obj ON obj.[object_id] = perm.[major_id]\nLEFT JOIN sys.schemas AS objschem ON objschem.[schema_id] = obj.[schema_id]\n--Table columns\nLEFT JOIN sys.columns AS col ON col.[object_id] = perm.[major_id]\nAND col.[column_id] = perm.[minor_id]\n--Impersonations\nLEFT JOIN sys.database_principals AS imp ON imp.[principal_id] = perm.[major_id]\n WHERE\nroleprinc.[type] = 'R'\nAND roleprinc.[name] = 'public'\nAND obj.[is_ms_shipped] = 0\n\nORDER BY\n [UserType],\n [DatabaseUserName],\n [Role],\n [Schema],\n [ObjectName],\n [ColumnName],\n [PermissionType],\n [PermissionState],\n [ObjectType]\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "master",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}